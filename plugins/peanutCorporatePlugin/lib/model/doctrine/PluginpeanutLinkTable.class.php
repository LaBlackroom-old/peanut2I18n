<?php

/**
 * peanutLinkTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
abstract class PluginpeanutLinkTable extends Doctrine_Table
{
  /**
   * Returns an instance of this class.
   *
   * @return object peanutLinkTable
   */
  public static function getInstance()
  {
    return Doctrine_Core::getTable('peanutLink');
  }

  /**
   * Retrieves link object.
   *
   * @return peanutLink
   */
  public function getItem($lang = null)
  {
    $p = $this->createQuery('p')
            ->leftJoin('p.Translation t')
            ->leftJoin('p.sfGuardUser s')
            ->leftJoin('p.peanutMenu m')
            ->leftJoin('p.peanutXfn x')
            ->leftJoin('p.peanutSeo o')
            ->orderBy('p.position ASC');
    
    if(null !== $lang)
    {
      $p->andWhere('t.lang = ?', $lang);
    }
    
    return $p;
  }

  /**
   * Retrieves link object.
   *
   * @param  string|int $item     The id or slug of item
   *
   * @return peanutLink
   */
  public function showItem($item, $lang = null)
  {
    $p = $this->getItem($lang)
            ->andWhere('p.id = ? or t.slug = ?', array($item, $item));

    return $p;
  }

  /**
   * Retrieves link object.
   *
   * @param  string     $status   The status of items
   *
   * @return peanutLink
   */
  public function getItems($status = 'publish', $lang = null)
  {
    $p = $this->getItem($lang)
            ->andWhere('p.status = ?', $status);

    return $p;
  }

  /**
   * Retrieves links object by menu.
   *
   * @param  string|int $menu     The id or slug of menu
   * @param  string     $status   The status of items
   *
   * @return peanutLink
   */
  public function getItemsByMenu($menu, $status = 'publish', $lang = null)
  {
    $p = $this->getItems($status, $lang)
            ->andWhere('m.id = ? OR m.slug = ?', array($menu, $menu));

    return $p;
  }

  /**
   * Retrieves links object by author.
   *
   * @param  string|int $author     The id or username of user
   * @param  string     $status   The status of items
   *
   * @return peanutLink
   */
  public function getItemsByAuthor($author, $status = 'publish', $lang = null)
  {
    $p = $this->getItems($status, $lang)
            ->andWhere('s.id = ? OR s.username = ?', array($author, $author));

    return $p;
  }

  /**
   * Retrieves links object by relation.
   *
   * @param  string     $rel      The relation of item
   * @param  string     $status   The status of items
   *
   * @return peanutLink
   */
   public function getItemsByRelation($rel, $status = 'publish', $lang = null)
   {
     $p = $this->getItems($status, $lang)
             ->andWhere('x.me LIKE ?', '%' . $rel . '%')
             ->orWhere('x.friendship LIKE ?', '%' . $rel . '%')
             ->orWhere('x.physical LIKE ?', '%' . $rel . '%')
             ->orWhere('x.professional LIKE ?', '%' . $rel . '%')
             ->orWhere('x.geographical LIKE ?', '%' . $rel . '%')
             ->orWhere('x.family LIKE ?', '%' . $rel . '%')
             ->orWhere('x.romantic LIKE ?', '%' . $rel . '%')
             ->orderBy('p.position ASC');

     return $p;
   }
}